@book{RMS_essays_2010,
    abstract = {Introduction (by Lawrence Lessig).   Every generation has its philosopher — a writer or an artist who captures the imagination of a time. Sometimes these philosophers are recognized as such; often it takes generations before the connection is made real. But recognized or not, a time gets marked by the people who speak its ideals, whether in the whisper of a poem, or the blast of a political movement.

Our generation has a philosopher. He is not an artist, or a professional writer. He is a programmer. Richard Stallman began his work in the labs of {MIT}, as a programmer and architect building operating system software. He has built his career on a stage of public life, as a programmer and an architect founding a movement for freedom in a world increasingly defined by  ” code.”

 ” Code” is the technology that makes computers run. Whether inscribed in software or burned in hardware, it is the collection of instructions, first written in words, that directs the functionality of machines. These machines — computers — increasingly define and control our life. They determine how phones connect, and what runs on {TV}. They decide whether video can be streamed across a broadband link to a computer. They control what a computer reports back to its manufacturer. These machines run us. Code runs these machines.

What control should we have over this code? What understanding? What freedom should there be to match the control it enables? What power?

These questions have been the challenge of Stallman's life. Through his works and his words, he has pushed us to see the importance of keeping code  ” free.” Not free in the sense that code writers don't get paid, but free in the sense that the control coders build be transparent to all, and that anyone have the right to take that control, and modify it as he or she sees fit. This is  ” free software”;  ” free software” is one answer to a world built in code.

 ” Free.” Stallman laments the ambiguity in his own term. There's nothing to lament. Puzzles force people to think, and this term  ” free” does this puzzling work quite well. To modern American ears,  ” free software” sounds utopian, impossible. Nothing, not even lunch, is free. How could the most important words running the most critical machines running the world be  ” free.” How could a sane society aspire to such an ideal?

Yet the odd clink of the word  ” free” is a function of us, not of the term.  ” Free” has different senses, only one of which refers to  ” price.” A much more fundamental sense of  ” free” is the  ” free,” Stallman says, in the term  ” free speech,” or perhaps better in the term  ” free labor.” Not free as in costless, but free as in limited in its control by others. Free software is control that is transparent, and open to change, just as free laws, or the laws of a  ” free society,” are free when they make their control knowable, and open to change. The aim of Stallman's  ” free software movement” is to make as much code as it can transparent, and subject to change, by rendering it  ” free.”

The mechanism of this rendering is an extraordinarily clever device called  ” copyleft” implemented through a license called {GPL}. Using the power of copyright law,  ” free software” not only assures that it remains open, and subject to change, but that other software that takes and uses  ” free software” (and that technically counts as a  ” derivative work”) must also itself be free. If you use and adapt a free software program, and then release that adapted version to the public, the released version must be as free as the version it was adapted from. It must, or the law of copyright will be violated.

 ” Free software,” like free societies, has its enemies. Microsoft has waged a war against the {GPL}, warning whoever will listen that the {GPL} is a  ” dangerous” license. The dangers it names, however, are largely illusory. Others object to the  ” coercion” in {GPL}'s insistence that modified versions are also free. But a condition is not coercion. If it is not coercion for Microsoft to refuse to permit users to distribute modified versions of its product Office without paying it (presumably) millions, then it is not coercion when the {GPL} insists that modified versions of free software be free too.

And then there are those who call Stallman's message too extreme. But extreme it is not. Indeed, in an obvious sense, Stallman's work is a simple translation of the freedoms that our tradition crafted in the world before code.  ” Free software” would assure that the world governed by code is as  ” free” as our tradition that built the world before code.

For example: A  ” free society” is regulated by law. But there are limits that any free society places on this regulation through law: No society that kept its laws secret could ever be called free. No government that hid its regulations from the regulated could ever stand in our tradition. Law controls. But it does so justly only when visibly. And law is visible only when its terms are knowable and controllable by those it regulates, or by the agents of those it regulates (lawyers, legislatures).

This condition on law extends beyond the work of a legislature. Think about the practice of law in American courts. Lawyers are hired by their clients to advance their clients' interests. Sometimes that interest is advanced through litigation. In the course of this litigation, lawyers write briefs. These briefs in turn affect opinions written by judges. These opinions decide who wins a particular case, or whether a certain law can stand consistently with a constitution.

All the material in this process is free in the sense that Stallman means. Legal briefs are open and free for others to use. The arguments are transparent (which is different from saying they are good) and the reasoning can be taken without the permission of the original lawyers. The opinions they produce can be quoted in later briefs. They can be copied and integrated into another brief or opinion. The  ” source code” for American law is by design, and by principle, open and free for anyone to take. And take lawyers do — for it is a measure of a great brief that it achieves its creativity through the reuse of what happened before. The source is free; creativity and an economy is built upon it.

This economy of free code (and here I mean free legal code) doesn't starve lawyers. Law firms have enough incentive to produce great briefs even though the stuff they build can be taken and copied by anyone else. The lawyer is a craftsman; his or her product is public. Yet the crafting is not charity. Lawyers get paid; the public doesn't demand such work without price. Instead this economy flourishes, with later work added to the earlier.

We could imagine a legal practice that was different — briefs and arguments that were kept secret; rulings that announced a result but not the reasoning. Laws that were kept by the police but published to no one else. Regulation that operated without explaining its rule.

We could imagine this society, but we could not imagine calling it  ” free.” Whether or not the incentives in such a society would be better or more efficiently allocated, such a society could not be known as free. The ideals of freedom, of life within a free society, demand more than efficient application. Instead, openness and transparency are the constraints within which a legal system gets built, not options to be added if convenient to the leaders. Life governed by software code should be no less.

Code writing is not litigation. It is better, richer, more productive. But the law is an obvious instance of how creativity and incentives do not depend upon perfect control over the products created. Like jazz, or novels, or architecture, the law gets built upon the work that went before. This adding and changing is what creativity always is. And a free society is one that assures that its most important resources remain free in just this sense.

For the first time, this book collects the writing and lectures of Richard Stallman in a manner that will make their subtlety and power clear. The essays span a wide range, from copyright to the history of the free software movement. They include many arguments not well known, and among these, an especially insightful account of the changed circumstances that render copyright in the digital world suspect. They will serve as a resource for those who seek to understand the thought of this most powerful man — powerful in his ideas, his passion, and his integrity, even if powerless in every other way. They will inspire others who would take these ideas, and build upon them.

I don't know Stallman well. I know him well enough to know he is a hard man to like. He is driven, often impatient. His anger can flare at friend as easily as foe. He is uncompromising and persistent; patient in both.

Yet when our world finally comes to understand the power and danger of code — when it finally sees that code, like laws, or like government, must be transparent to be free — then we will look back at this uncompromising and persistent programmer and recognize the vision he has fought to make real: the vision of a world where freedom and knowledge survives the compiler. And we will come to see that no man, through his deeds or words, has done as much to make possible the freedom that this next society could have.

We have not earned that freedom yet. We may well fail in securing it. But whether we succeed or fail, in these essays is a picture of what that freedom could be. And in the life that produced these words and works, there is inspiration for anyone who would, like Stallman, fight to create this freedom.},
    author = {Stallman, Richard M. and Lessig, Lawrence},
    citeulike-article-id = {12602962},
    citeulike-linkout-0 = {http://scholar.google.it/scholar?cluster=8818832246125875530},
    citeulike-linkout-1 = {http://www.worldcat.org/isbn/1441436200},
    citeulike-linkout-2 = {http://books.google.com/books?vid=ISBN1441436200},
    citeulike-linkout-3 = {http://www.amazon.com/gp/search?keywords=1441436200&index=books&linkCode=qs},
    citeulike-linkout-4 = {http://www.librarything.com/isbn/1441436200},
    citeulike-linkout-5 = {http://www.worldcat.org/oclc/535285627},
    isbn = {1441436200},
    keywords = {digital-society, epistemology, free-scientific-knowledge, free-software, knowledge-freedom, science-ethics, science-policy-interface},
    posted-date = {2016-02-19 11:23:43},
    priority = {0},
    publisher = {SoHo Books},
    title = {Free software, free society : selected essays of Richard M. Stallman},
    url = {http://scholar.google.it/scholar?cluster=8818832246125875530},
    year = {2010}
}

@online{perens-2017,
  author = {Bruce Perens},
  title = {On Usage of The Phrase "Open Source"},
  year = 2017,
  month= September,
  howpublished = {\url{https://perens.com/2017/09/26/on-usage-of-the-phrase-open-source/} (accessed May 9, 2018)}
}

@online{dmca-wiki,
  title = {Digital Millennium Copyright Act},
  howpublished =
{\url{https://en.wikipedia.org/wiki/Digital_Millennium_Copyright_Act} (accessed November 8, 2018)}
}

@online{dmca-overview,
  author = {U.S. Copyright office},
  title = {THE DIGITAL MILLENNIUM COPYRIGHT ACT OF 1998 -- U.S. Copyright Office Summary},
  year = 1998,
  month= December
}

@online{gnu-copyleft,
  title = {What is Copyleft?},
  howpublished = {\url{https://www.gnu.org/licenses/copyleft.html} (accessed November 8, 2018)}
}

@inproceedings{digirightmana,
  title={Intellectual Property and Licensing Strategies in Open Collaborative Innovation},
  author={Borger, Marcel and Bekker, Rudy and Granstrand, Ove},
  booktitle={Digital Rights Management: Concepts, Methodologies, Tools, and Applications},
  pages={1204-1216},
  year={2012},
  organization={Information Science Reference}
}

@book{Brasseur.2018,
 abstract = {{\textquotedbl}Free and open source is the foundation of software development, and it's built by people just like you. Discover the fundamental tenets that drive the movement. Take control of your career by selecting the right project to meet your professional goals. Master the language and avoid the pitfalls that typically ensnare new contributors. Join a community of like-minded people and change the world. Programmers, writers, designers, and everyone interested in software will make their mark through free and open source software contributions.{\textquotedbl} --},
 author = {Brasseur, Vicky},
 year = {2018},
 title = {Forge your future with open source: Build your skills, build your network, build the future of technology},
 address = {Raleigh, North Carolina},
 publisher = {{The Pragmatic Bookshelf}},
 isbn = {978-1-68050-301-2},
 series = {Pragmatic programmers}
}

@article{Benkler.2002,
    abstract  = {{\textquotedbl}For decades our common understanding of the organization of economic production has been that individuals order their productive activities in one of two ways: either as employees in firms, following the directions of managers, or as individuals in markets, following price signals. This dichotomy was first identified in the early work of Ronald Coase and was developed most explicitly in the work of institutional economist Oliver Williamson. Recently, public attention has focused on a fifteen-year-old phenomenon called free software or open source software. This phenomenon involves thousands, or even tens of thousands, of computer programmers who collaborate on large- and small-scale projects without traditional firm-based or market-based ownership of the resulting product. This Article explains why free software is only one example of a much broader social-economic phenomenon emerging in the digitally networked environment, a third mode of production that the author calls "commons-based peer production." The Article begins by demonstrating the widespread use of commons-based peer production on the Internet through a number of detailed examples, such as Wikipedia, Slashdot, the Open Directory Project, and Google. The Article uses these examples to reveal fundamental characteristics of commons-based peer production that distinguish it from the property- and contract-based modes of firms and markets. The central distinguishing characteristic is that groups of individuals successfully collaborate on large-scale projects following a diverse cluster of motivational drives and social signals rather than market prices or managerial commands. The Article then explains why this mode has systematic advantages over markets and managerial hierarchies in the digitally networked environment when the object of production is information or culture. First, peer production has an advantage in what the author calls "information opportunity cost," because it loses less information about who might be the best person for a given job. Second, there are substantial increasing allocation gains to be captured from allowing large clusters of potential contributors to interact with large clusters of information resources in search of new projects and opportunities for collaboration. The Article concludes with an overview of how these models use a variety of technological, social, and formal strategies to overcome the collective action problems usually solved in managerial and market-based systems by property, contract, and managerial commands.{\textquotedbl} --}
    author    = {Benkler, Yochai},
    title     = {Coase's Penguin, or, Linux and The Nature of the Firm},
    publisher = {Yale Law School},
    year      = {2002},
}